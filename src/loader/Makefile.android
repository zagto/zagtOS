.PHONY: all-android clean-android install-android

PLATFORM_ANDROID_BUILD_DIR=$(SHBUILD_BUILD_DIR)/android

CXX_SOURCES = $(shell find -L . -type f -name '*.cpp' -not -path './arch/*' -not -path './platform/*')
CXX_HEADERS = $(shell find -L . ../kernel-loader-common -type f -name '*.hpp' -follow -not -path './arch/*')
CXX_SOURCES += $(shell find -L arch/$(ARCH) -type f -name '*.cpp')
CXX_HEADERS += $(shell find -L arch/$(ARCH) ../kernel-loader-common/arch/$(ARCH) -type f -name '*.hpp' -follow)
CXX_SOURCES += $(shell find -L platform/android -type f -name '*.cpp')
CXX_HEADERS += $(shell find -L platform/android -type f -name '*.hpp')
CXX_HEADERS += $(shell find -L stdlib ../kernel-loader-common/stdlib -type f)
CXX_OBJS = $(addprefix $(PLATFORM_ANDROID_BUILD_DIR)/, $(CXX_SOURCES:.cpp=.o))

ASM_SOURCES = $(shell find -L arch/$(ARCH) -type f -name '*.asm')
ASM_SOURCES += $(shell find -L platform/android -type f -name '*.asm')
ASM_OBJS = $(addprefix $(PLATFORM_ANDROID_BUILD_DIR)/, $(ASM_SOURCES:.asm=.o))
CRTI_OBJ = $(PLATFORM_ANDROID_BUILD_DIR)/arch/$(ARCH)/crt/crti.o
CRTN_OBJ = $(PLATFORM_ANDROID_BUILD_DIR)/arch/$(ARCH)/crt/crtn.o
ASM_REGULAR_OBJS = $(filter-out $(CRTI_OBJ), $(filter-out $(CRTN_OBJ), $(ASM_OBJS)))


TARGET = $(PLATFORM_ANDROID_BUILD_DIR)/vmlinux
ELF = $(PLATFORM_ANDROID_BUILD_DIR)/loader.elf

CXX = $(ARCH)-elf-g++
LD = $(ARCH)-elf-ld

CXXFLAGS = -Os -ffreestanding -fno-rtti -fno-exceptions -fpic -fno-stack-protector -Wall -Wextra -Werror $(KERNEL_CFLAGS_$(ARCH)) -mcmodel=tiny -I$(PWD) -I$(PWD)/stdlib -I$(PWD)/arch/$(ARCH) -I$(PWD)/platform/android -I$(PWD)/../kernel-loader-common -I$(PWD)/../kernel-loader-common/stdlib -I$(PWD)/../kernel-loader-common/arch/$(ARCH) -DZAGTOS_LOADER
CXXFLAGS += -march=armv8-a -mstrict-align
export CXXFLAGS

LDFLAGS = -Os -nostdlib -fpic -static -z max-page-size=0x1000 -T platform/android/linker.ld

OBJCOPY_SECTIONS = -j .header -j .text -j .data -j .eh_frame -j .got -j .bss


all-android: $(TARGET)

$(TARGET): $(ELF)
	objcopy -I elf64-little $(OBJCOPY_SECTIONS) -O binary $^ $@

$(ELF): $(CXX_OBJS) $(ASM_OBJS) kernel-loader-common
	mkdir -p $(dir $@)
	$(CXX) $(LDFLAGS) -o $@ -Wl,--start-group $(CRTI_OBJ) $(PLATFORM_ANDROID_BUILD_DIR)/kernel-loader-common.a $(CXX_OBJS) $(ASM_REGULAR_OBJS) $(CRTN_OBJ) -Wl,--end-group

$(PLATFORM_ANDROID_BUILD_DIR)/%.o: %.asm
	mkdir -p $(dir $@)
	$(AS_$(ARCH)) -o $@ $^

$(PLATFORM_ANDROID_BUILD_DIR)/%.o: %.cpp $(CXX_HEADERS)
	mkdir -p $(dir $@)
	$(CXX) $(CXXFLAGS) -c -o $@ $<

kernel-loader-common:
	make -C ../kernel-loader-common BUILD_DIR=$(PLATFORM_ANDROID_BUILD_DIR)


clean:
	rm -f $(CXX_OBJS) $(ASM_OBJS) $(TARGET) loader.elf

