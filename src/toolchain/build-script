#!/bin/bash
set -e

function check_toolchain() {
    NAME="$1"
    TARGET="$2"
    NOHEADERS="$3"
    TARGET_CFLAGS="$4"

    TOOLCHAIN_DIR="$SHBUILD_ROOT/out/toolchain/$NAME"
    TOOLCHAIN_BUILD_DIR="$SHBUILD_ROOT/build/toolchain/$NAME"
    if [ ! -d "$TOOLCHAIN_DIR" ]; then
        BINUTILS_SOURCE_DIR="$PWD/binutils"
        BINUTILS_BUILD_DIR="$TOOLCHAIN_BUILD_DIR/binutils"
        GCC_SOURCE_DIR="$PWD/gcc"
        GCC_BUILD_DIR="$TOOLCHAIN_BUILD_DIR/gcc"

        if [ "$NOHEADERS" = "yes" ]; then
            EXTRA_FLAGS_BINUTILS="--without-headers"
            EXTRA_FLAGS_GCC=
        else
            EXTRA_FLAGS_BINUTILS="--with-sysroot=$SYSROOT"
            EXTRA_FLAGS_GCC="--with-sysroot=$SYSROOT"
        fi
        mkdir -p "$BINUTILS_BUILD_DIR"
        pushd "$BINUTILS_BUILD_DIR"
        "$BINUTILS_SOURCE_DIR/configure" --target="$TARGET" --prefix="$TOOLCHAIN_DIR" --disable-werror --disable-gdb --disable-nls --enable-lto $EXTRA_FLAGS_BINUTILS
        make -j "$PARALLEL_JOBS"
        make install
        popd


        mkdir -p "$GCC_BUILD_DIR"
        pushd "$GCC_BUILD_DIR"
        "$GCC_SOURCE_DIR/configure" --target="$TARGET" --prefix="$TOOLCHAIN_DIR" --enable-languages=c,c++,lto --disable-nls $EXTRA_FLAGS_GCC
        make -j "$PARALLEL_JOBS" all-gcc
        make -j "$PARALLEL_JOBS" all-target-libgcc CFLAGS_FOR_TARGET="$TARGET_CFLAGS"
        make install-gcc
        make install-target-libgcc
        popd
    fi
}

KERNEL_CFLAGS_VARIABLE_NAME="KERNEL_CFLAGS_${ARCH}"
check_toolchain "kernel-${ARCH}" "${ARCH}-elf" 'yes' "-g -O2 ${!KERNEL_CFLAGS_VARIABLE_NAME}"
check_toolchain "system-${ARCH}" "${ARCH}-zagto-zagtos" '' ''
